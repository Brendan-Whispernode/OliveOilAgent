import { AxiosError } from 'axios';
import { ReveAIError } from '../types';
/**
 * Delay execution for a specified time
 * @param ms Milliseconds to wait
 */
export declare function delay(ms: number): Promise<void>;
/**
 * Convert an Axios error to a ReveAIError
 * @param error The original error from Axios
 * @param operation Description of the operation that failed
 * @param verbose Whether to include verbose error details
 * @returns A formatted ReveAIError
 */
export declare function handleAxiosError(error: AxiosError | Error, operation: string, verbose?: boolean): ReveAIError;
/**
 * Generate a random seed for image generation
 * @returns A random seed number
 */
export declare function generateRandomSeed(): number;
/**
 * Validate image generation options to ensure they're within acceptable ranges
 * @param width Image width
 * @param height Image height
 * @param batchSize Number of images to generate
 */
export declare function validateImageOptions(width?: number, height?: number, batchSize?: number): void;
/**
 * Parse JWT token to extract user information
 * @param token JWT token string
 * @returns Decoded token payload
 */
export declare function parseJwt(token: string): Record<string, unknown>;
